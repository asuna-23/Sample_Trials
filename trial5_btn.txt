//CommonButton

import { shallowMount } from '@vue/test-utils';
import CommonButton from '@/components/CommonButton.vue';

describe('CommonButton.vue', () => {
  let wrapper;
  const item = {
    display: {
      label: 'Click Me',
    },
    directives: {
      variant: 'primary',
      size: 'lg',
    },
    events: {
      actionName: 'buttonClicked',
    },
  };

  beforeEach(() => {
    wrapper = shallowMount(CommonButton, {
      propsData: {
        item,
      },
    });
  });

  it('renders the button with the correct label', () => {
    const button = wrapper.find('button');

    expect(button.text()).toBe('Click Me');
  });

  it('emits the action event with the correct action name when clicked', () => {
    const button = wrapper.find('button');

    // Simulate a click event on the button
    button.trigger('click');

    // Expect the emit event to be called
    expect(wrapper.emitted('action')).toBeTruthy();
    // Check that the emitted event contains the correct action name
    expect(wrapper.emitted('action')[0]).toEqual(['buttonClicked']);
  });

  it('binds the correct directives to the button', () => {
    const button = wrapper.find('button');

    // Check if the button has the correct attributes
    expect(button.attributes('variant')).toBe('primary');
    expect(button.attributes('size')).toBe('lg');
  });
});

/////////////////

import { shallowMount } from '@vue/test-utils';
import CommonButton from '@/components/CommonButton.vue';

describe('CommonButton.vue', () => {
  let wrapper;
  const item = {
    display: {
      label: 'Click Me',
    },
    directives: {
      variant: 'primary',
      size: 'lg',
    },
  };

  beforeEach(() => {
    wrapper = shallowMount(CommonButton, {
      propsData: {
        item,
      },
    });
  });

  it('renders the button with the correct label', () => {
    const button = wrapper.find('button');

    expect(button.text()).toBe('Click Me');
  });

  it('emits the button action when clicked', () => {
    const button = wrapper.find('button');

    // Simulate a click event on the button
    button.trigger('click');

    // Expect the emit event to be called
    expect(wrapper.emitted('button-action')).toBeTruthy();
  });

  it('binds the correct directives to the button', () => {
    const button = wrapper.find('button');

    // Check if the button has the correct attributes
    expect(button.attributes('variant')).toBe('primary');
    expect(button.attributes('size')).toBe('lg');
  });
});

